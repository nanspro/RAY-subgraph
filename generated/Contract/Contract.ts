// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class LogMintRAYT extends EthereumEvent {
  get params(): LogMintRAYT__Params {
    return new LogMintRAYT__Params(this);
  }
}

export class LogMintRAYT__Params {
  _event: LogMintRAYT;

  constructor(event: LogMintRAYT) {
    this._event = event;
  }

  get tokenId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get portfolioId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get beneficiary(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LogMintOpportunityToken extends EthereumEvent {
  get params(): LogMintOpportunityToken__Params {
    return new LogMintOpportunityToken__Params(this);
  }
}

export class LogMintOpportunityToken__Params {
  _event: LogMintOpportunityToken;

  constructor(event: LogMintOpportunityToken) {
    this._event = event;
  }

  get tokenId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get portfolioId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class LogWithdrawFromRAYT extends EthereumEvent {
  get params(): LogWithdrawFromRAYT__Params {
    return new LogWithdrawFromRAYT__Params(this);
  }
}

export class LogWithdrawFromRAYT__Params {
  _event: LogWithdrawFromRAYT;

  constructor(event: LogWithdrawFromRAYT) {
    this._event = event;
  }

  get tokenId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LogBurnRAYT extends EthereumEvent {
  get params(): LogBurnRAYT__Params {
    return new LogBurnRAYT__Params(this);
  }
}

export class LogBurnRAYT__Params {
  _event: LogBurnRAYT;

  constructor(event: LogBurnRAYT) {
    this._event = event;
  }

  get tokenId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenValue(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LogDepositToRAYT extends EthereumEvent {
  get params(): LogDepositToRAYT__Params {
    return new LogDepositToRAYT__Params(this);
  }
}

export class LogDepositToRAYT__Params {
  _event: LogDepositToRAYT;

  constructor(event: LogDepositToRAYT) {
    this._event = event;
  }

  get tokenId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Contract extends SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  deprecated(): boolean {
    let result = super.call("deprecated", []);

    return result[0].toBoolean();
  }

  try_deprecated(): CallResult<boolean> {
    let result = super.tryCall("deprecated", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  _storage(): Address {
    let result = super.call("_storage", []);

    return result[0].toAddress();
  }

  try__storage(): CallResult<Address> {
    let result = super.tryCall("_storage", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  redeem(
    tokenId: Bytes,
    valueToWithdraw: BigInt,
    originalCaller: Address
  ): BigInt {
    let result = super.call("redeem", [
      EthereumValue.fromFixedBytes(tokenId),
      EthereumValue.fromUnsignedBigInt(valueToWithdraw),
      EthereumValue.fromAddress(originalCaller)
    ]);

    return result[0].toBigInt();
  }

  try_redeem(
    tokenId: Bytes,
    valueToWithdraw: BigInt,
    originalCaller: Address
  ): CallResult<BigInt> {
    let result = super.tryCall("redeem", [
      EthereumValue.fromFixedBytes(tokenId),
      EthereumValue.fromUnsignedBigInt(valueToWithdraw),
      EthereumValue.fromAddress(originalCaller)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  onERC721Received(
    param0: Address,
    from: Address,
    tokenId: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call("onERC721Received", [
      EthereumValue.fromAddress(param0),
      EthereumValue.fromAddress(from),
      EthereumValue.fromUnsignedBigInt(tokenId),
      EthereumValue.fromBytes(param3)
    ]);

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    from: Address,
    tokenId: BigInt,
    param3: Bytes
  ): CallResult<Bytes> {
    let result = super.tryCall("onERC721Received", [
      EthereumValue.fromAddress(param0),
      EthereumValue.fromAddress(from),
      EthereumValue.fromUnsignedBigInt(tokenId),
      EthereumValue.fromBytes(param3)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get __storage(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends EthereumCall {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class MintCall extends EthereumCall {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get portfolioId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get beneficiary(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class DepositCall extends EthereumCall {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get tokenId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class RedeemCall extends EthereumCall {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get tokenId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get valueToWithdraw(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get originalCaller(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class OnERC721ReceivedCall extends EthereumCall {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class LendCall extends EthereumCall {
  get inputs(): LendCall__Inputs {
    return new LendCall__Inputs(this);
  }

  get outputs(): LendCall__Outputs {
    return new LendCall__Outputs(this);
  }
}

export class LendCall__Inputs {
  _call: LendCall;

  constructor(call: LendCall) {
    this._call = call;
  }

  get portfolioId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get opportunityId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get opportunity(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get subtract(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class LendCall__Outputs {
  _call: LendCall;

  constructor(call: LendCall) {
    this._call = call;
  }
}

export class WithdrawCall extends EthereumCall {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get portfolioId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get opportunityId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get opportunity(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get add(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class TransferFundsCall extends EthereumCall {
  get inputs(): TransferFundsCall__Inputs {
    return new TransferFundsCall__Inputs(this);
  }

  get outputs(): TransferFundsCall__Outputs {
    return new TransferFundsCall__Outputs(this);
  }
}

export class TransferFundsCall__Inputs {
  _call: TransferFundsCall;

  constructor(call: TransferFundsCall) {
    this._call = call;
  }

  get portfolioId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get beneficiary(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFundsCall__Outputs {
  _call: TransferFundsCall;

  constructor(call: TransferFundsCall) {
    this._call = call;
  }
}

export class ApproveCall extends EthereumCall {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get beneficiary(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends EthereumCall {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetDeprecatedCall extends EthereumCall {
  get inputs(): SetDeprecatedCall__Inputs {
    return new SetDeprecatedCall__Inputs(this);
  }

  get outputs(): SetDeprecatedCall__Outputs {
    return new SetDeprecatedCall__Outputs(this);
  }
}

export class SetDeprecatedCall__Inputs {
  _call: SetDeprecatedCall;

  constructor(call: SetDeprecatedCall) {
    this._call = call;
  }

  get value(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetDeprecatedCall__Outputs {
  _call: SetDeprecatedCall;

  constructor(call: SetDeprecatedCall) {
    this._call = call;
  }
}

export class FallbackClaimCall extends EthereumCall {
  get inputs(): FallbackClaimCall__Inputs {
    return new FallbackClaimCall__Inputs(this);
  }

  get outputs(): FallbackClaimCall__Outputs {
    return new FallbackClaimCall__Outputs(this);
  }
}

export class FallbackClaimCall__Inputs {
  _call: FallbackClaimCall;

  constructor(call: FallbackClaimCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get principalToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get isERC20(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class FallbackClaimCall__Outputs {
  _call: FallbackClaimCall;

  constructor(call: FallbackClaimCall) {
    this._call = call;
  }
}
